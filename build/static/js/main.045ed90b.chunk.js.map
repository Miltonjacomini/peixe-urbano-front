{"version":3,"sources":["components/Container/index.jsx","services/api.js","components/DealForm/components/DialogBuyOptionContext.jsx","components/DealForm/components/DialogBuyOption.jsx","components/DealForm/components/DealTypeSelect.jsx","components/DealForm/index.jsx","components/BuyOptionForm/index.jsx","components/DealItem/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","children","className","to","id","instance","axios","create","baseURL","DialogBuyOptionContext","React","createContext","openDialog","setOpenDialog","DialogBuyOptionProvider","Provider","Consumer","useStyles","makeStyles","table","minWidth","DialogBuyOption","deal","useContext","useState","buyOptions","setBuyOptions","classes","useEffect","a","api","get","response","data","console","log","loadBuyOptions","handleClickClose","buyOption","post","filter","buyOp","Dialog","open","onClose","maxWidth","aria-labelledby","DialogTitle","DialogContent","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","key","title","salePrice","IconButton","color","onClick","addOption","DialogActions","Button","DealTypeSelect","onChange","dealTypes","setDealTypes","type","setType","loadDealTypes","InputLabel","Select","labelId","value","e","preventDefault","target","dealType","MenuItem","name","descricao","DealForm","onSubmit","setTitle","text","setText","Date","createDate","setCreateDate","publishDate","setPublishDate","endDate","setEndDate","deals","setDeals","setDeal","loadDeals","htmlFor","required","handleClickOpen","BuyOptionForm","normalPrice","setNormalPrice","percentageDiscount","setPercentageDiscount","quantityCupom","setQuantityCupom","startDate","setStartDate","theme","root","width","typography","padding","spacing","DealItem","newPlacement","setOpen","anchorEl","setAnchorEl","placement","setPlacement","ClickAwayListener","onClickAway","event","currentTarget","prev","Popper","disablePortal","transition","length","disabled","comprar","App","_id","Boolean","window","location","hostname","match","ReactDOM","render","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.045ed90b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../../css/global.css';\nimport '../../css/Main.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Container({ children }) {\n \n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link to={'/'} className=\"navbar-brand\">Peixe Urbano - Ofertas </Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={'/'} className=\"nav-link\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={'/deal'} className=\"nav-link\">Deal</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={'/buy-option'} className=\"nav-link\">Buy Option</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <br/>\n        <main>\n          { children }\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Container;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  // baseURL: \"https://peixe-urbano-backend.herokuapp.com/api\"\n  baseURL: \"http://localhost:8080/api\"\n});\n\nexport default instance;","import React from 'react';\n\nlet openDialog = {};\n\nconst DialogBuyOptionContext = React.createContext({\n    openDialog: openDialog,\n    setOpenDialog: () => {}\n});\n\nexport const DialogBuyOptionProvider = DialogBuyOptionContext.Provider\nexport const DialogBuyOptionConsumer = DialogBuyOptionContext.Consumer\nexport default DialogBuyOptionContext;","import React, { useState, useEffect, useContext} from 'react';\nimport api from '../../../services/api';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DialogBuyOptionContext from './DialogBuyOptionContext';\nimport '../styles.css';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n});\n\nconst DialogBuyOption = ({ deal }) => {\n\n    const { openDialog, setOpenDialog } = useContext(DialogBuyOptionContext);\n    const [buyOptions, setBuyOptions] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        console.log('entrei no dialog');\n        async function loadBuyOptions() {\n          const response = await api.get('/buy-options');\n    \n          setBuyOptions(response.data);\n        }\n  \n        loadBuyOptions();\n      }, [])\n\n    const handleClickClose = () => {\n        setOpenDialog(false);\n    }\n\n    async function addOption(buyOption) {\n\n        const response = await api.post(`/deal/${deal.id}/option/${buyOption.id}`);\n        console.log(response);\n        \n        setBuyOptions(buyOptions.filter(buyOp => buyOp.id !== buyOption.id));\n    }\n\n    return (\n        <Dialog open={openDialog} onClose={handleClickClose} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Adicione as opções de ofertas </DialogTitle>\n            <DialogContent>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell align=\"left\">Title</TableCell>\n                            <TableCell align=\"left\">Sale Price</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {buyOptions.map(buyOption => (\n                                <TableRow key={buyOption.id}>\n                                    <TableCell align=\"left\">{buyOption.title}</TableCell>\n                                    <TableCell align=\"left\">{buyOption.salePrice}</TableCell>\n                                    <TableCell align=\"right\">\n                                        <IconButton color=\"primary\" aria-label=\"Add offers to shopping cart\" \n                                            onClick={() => addOption(buyOption)}>\n                                            <AddIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClickClose} color=\"primary\">\n                    Fechar\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default DialogBuyOption;","import React, { useState, useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport api from '../../../services/api';\n\nfunction DealTypeSelect({ onChange }) {\n\n    const [dealTypes, setDealTypes] = useState([]);\n    const [type, setType] = useState('');\n\n    useEffect(() => {\n      async function loadDealTypes() {\n        const response = await api.get('/deal-types');\n  \n        setDealTypes(response.data);\n      }\n\n      loadDealTypes();\n    }, []);\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setType(e.target.value);\n        onChange(type);\n    };\n\n    return (\n        <>\n            <InputLabel id=\"label-select-deal-type\">Type</InputLabel>\n            <Select\n                labelId=\"label-select-deal-type\"\n                id=\"select-deal-type\"\n                value={type}\n                onChange={handleChange}>\n                {dealTypes.map(dealType => (\n                    <MenuItem key={dealType.name} value={dealType}>{dealType.descricao}</MenuItem>\n                ))}\n            </Select>\n        </>\n    );\n}\n\nexport default DealTypeSelect;","import React, { useState, useEffect } from 'react';\nimport Container from '../Container';\nimport api from '../../services/api';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport DialogBuyOption from './components/DialogBuyOption';\nimport { DialogBuyOptionProvider } from './components/DialogBuyOptionContext';\nimport DealTypeSelect from './components/DealTypeSelect';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../../css/Form.css';\nimport './styles.css';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n});\n\nfunction DealForm({ onSubmit }) {\n\n    const [title, setTitle] = useState('');\n    const [text, setText] = useState('');\n    const [openDialog, setOpenDialog] = useState(false);\n    const [createDate, setCreateDate] = useState(new Date());\n    const [publishDate, setPublishDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [type, setType] = useState('');\n    const [deals, setDeals] = useState([]);\n    const [deal, setDeal] = useState('');\n\n    const classes = useStyles();\n   \n    useEffect(() => {\n        async function loadDeals() {\n          const response = await api.get('/deals');\n    \n          setDeals(response.data);\n        }\n    \n        loadDeals();\n    }, []);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        \n        const response = await api.post('/deal', {\n            title,\n            text,\n            createDate,\n            publishDate,\n            endDate,\n            type\n        });\n            \n        setDeals([...deals, response.data]);\n\n        console.log(response);\n\n        setTitle('');\n        setText('');\n        setCreateDate('');\n        setPublishDate('');\n        setEndDate('');\n        setType('');\n    }\n\n    const handleClickOpen = deal => {\n        console.log('entrei no onClick');\n        setDeal(deal);\n        setOpenDialog(true);\n    }\n\n    return (\n        <Container children={(\n            <>\n                <div className=\"form-deal\"> \n                    <div className=\"form-deal-title\">\n                        <strong>Cadastro de oferta</strong>\n                    </div>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"input-block\">\n                            <label htmlFor=\"title\">Title</label>\n                            <input id=\"title\" name=\"title\" \n                                value={title} onChange={e => setTitle(e.target.value)} required/>\n                        </div>\n                        \n                        <div className=\"input-block\">\n                            <label htmlFor=\"text\">Text</label>\n                            <textarea id=\"text\" name=\"text\" value={text}\n                                onChange={e => setText(e.target.value)} required/>\n                        </div>\n\n                        <div className=\"input-block\">\n                            <DealTypeSelect onChange={setType} />\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-block\">\n                                <label htmlFor=\"publishDate\">Publish Date</label>\n                                <input id=\"publishDate\" type=\"date\" name=\"publishDate\" \n                                    value={publishDate} onChange={e => setPublishDate(e.target.value)}\n                                    required/>\n                            </div>\n                            <div className=\"input-block\">\n                                <label htmlFor=\"endDate\">End Date</label>\n                                <input id=\"endDate\" type=\"date\" name=\"endDate\" \n                                    value={endDate} onChange={e => setEndDate(e.target.value)} required/>\n                            </div>\n                        </div>\n                        <button type=\"submit\">Salvar</button>\n                    </form>\n                </div>\n                <TableContainer component={Paper} className=\"table-deals\">\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell align=\"left\">Title</TableCell>\n                            <TableCell align=\"left\">Text</TableCell>\n                            <TableCell align=\"center\">Type</TableCell>\n                            <TableCell align=\"center\">Data Publish</TableCell>\n                            <TableCell align=\"center\">Data End</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {deals.map(deal => (\n                                <TableRow key={deal.id}>\n                                    <TableCell align=\"left\">{deal.title}</TableCell>\n                                    <TableCell align=\"left\">{deal.text}</TableCell>\n                                    <TableCell align=\"center\">{deal.type.descricao}</TableCell>\n                                    <TableCell align=\"center\">{deal.publishDate}</TableCell>\n                                    <TableCell align=\"center\">{deal.endDate}</TableCell>\n                                    <TableCell align=\"center\">\n                                        <IconButton color=\"primary\" aria-label=\"Add offers to shopping cart\" onClick={() => handleClickOpen(deal)}>\n                                            <AddIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <DialogBuyOptionProvider value={{openDialog: openDialog, setOpenDialog: setOpenDialog}}>\n                    <DialogBuyOption deal={deal} />\n                </DialogBuyOptionProvider>\n            </>\n        )} />\n    );\n}\n\nexport default DealForm;","import React, { useState } from 'react';\nimport Container from '../Container';\nimport api from '../../services/api';\n\nimport '../../css/Form.css';\nimport './styles.css';\n\nfunction BuyOptionForm() {\n\n    const [title, setTitle] = useState('');\n    const [normalPrice, setNormalPrice] = useState('');\n    const [percentageDiscount, setPercentageDiscount] = useState('');\n    const [quantityCupom, setQuantityCupom] = useState('');\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState('');\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        \n        const response = await api.post('/buy-option', {\n            title,\n            normalPrice,\n            percentageDiscount,\n            quantityCupom,\n            startDate,\n            endDate\n        });\n            \n        console.log(response);\n\n        setTitle('');\n        setNormalPrice('');\n        setPercentageDiscount('');\n        setQuantityCupom('');\n        setStartDate('');\n        setEndDate('');\n    }\n\n    return (\n        <Container children={(\n            <>\n                <div className=\"form-deal\"> \n                    <div className=\"form-deal-title\">\n                        <strong>Cadastre a opção de oferta</strong>\n                    </div>\n                    <form onSubmit={handleSubmit}>\n\n                        <div className=\"input-group\">\n                            <div className=\"input-block\">\n                                <label htmlFor=\"title\">Title</label>\n                                <input id=\"title\" name=\"title\" \n                                    value={title} onChange={e => setTitle(e.target.value)} required/>\n                            </div>\n                            <div className=\"input-block\">\n                                <label htmlFor=\"quantityCupom\">Quantity cupom</label>\n                                <input id=\"quantityCupom\" name=\"quantityCupom\" type=\"number\" \n                                    value={quantityCupom} onChange={e => setQuantityCupom(e.target.value)} \n                                    required/>\n                            </div>\n                        </div>\n\n                        <div className=\"input-group\">\n                            <div className=\"input-block\">\n                                <label htmlFor=\"normalPrice\">Normal price</label>\n                                <input id=\"normalPrice\" type=\"number\" name=\"normalPrice\" \n                                    value={normalPrice} onChange={e => setNormalPrice(e.target.value)} required/>\n                            </div>\n                            <div className=\"input-block\">\n                                <label htmlFor=\"percentageDiscount\">Percentage discount</label>\n                                <input id=\"percentageDiscount\" type=\"number\" name=\"percentageDiscount\" value={percentageDiscount} \n                                    onChange={e => setPercentageDiscount(e.target.value)} required/>\n                            </div>\n                        </div>\n\n                        <div className=\"input-group\">\n                            <div className=\"input-block\">\n                                <label htmlFor=\"startDate\">Start Date</label>\n                                <input id=\"startDate\" type=\"date\" name=\"startDate\" \n                                    value={startDate} onChange={e => setStartDate(e.target.value)} required/>\n                            </div>\n                            <div className=\"input-block\">\n                                <label htmlFor=\"endDate\">End Date</label>\n                                <input id=\"endDate\" type=\"date\" name=\"endDate\" \n                                    value={endDate} onChange={e => setEndDate(e.target.value)} required/>\n                            </div>\n                        </div>\n                        <button type=\"submit\">Salvar</button>\n                    </form>\n                </div>\n            </>\n        )} />\n    );\n}\n\nexport default BuyOptionForm;","import React, { useState } from 'react';\n\nimport Popper from '@material-ui/core/Popper';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nimport api from '../../services/api';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport './styles.css';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: 500,\n    },\n    typography: {\n      padding: theme.spacing(2),\n    },\n  }));\n\nfunction DealItem({ deal }) {\n\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [placement, setPlacement] = useState();\n    \n    const classes = useStyles();\n\n    const handleClick = newPlacement => event => {\n        setAnchorEl(event.currentTarget);\n        setOpen(prev => placement !== newPlacement || !prev);\n        setPlacement(newPlacement);\n    };\n\n    const handleClickAway = () => {\n        setOpen(false);\n    }\n\n    async function comprar(buyOption) {\n        const response = await api.post(`/buy-option/${buyOption.id}/sell`);\n        console.log(response);\n    }\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <li className=\"deal-item\">\n                <header>\n                    <div className=\"user-info\">\n                        <strong>{deal.title}</strong>\n                    </div>\n                </header>\n                <div>\n                    <p>\n                        <>{deal.text}</>\n                    </p>\n                </div>\n                <div>\n                    <Button onClick={handleClick('bottom-start')}>View Options</Button>\n                    <Popper open={open} anchorEl={anchorEl}\n                        placement={placement}\n                        disablePortal={false} transition>\n                        <Paper>\n                            <div className={classes.typography}>\n                                { deal.buyOptions.length > 0 ? \n                                <Table className={classes.table} aria-label=\"simple table\">\n                                    <TableBody>\n                                        {deal.buyOptions.map(buyOption => (\n                                            <TableRow key={buyOption.id}>\n                                                <TableCell align=\"left\">{buyOption.title}</TableCell>\n                                                <TableCell align=\"left\">{buyOption.salePrice}</TableCell>\n                                                <TableCell align=\"right\">\n                                                    <Button color=\"primary\" aria-label=\"Buying option\" \n                                                        disabled={buyOption.quantityCupom <= 0}\n                                                        onClick={() => comprar(buyOption)}>\n                                                        Comprar\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table> :\n                                \"Não hà opções de ofertas cadastradas ou válidas para essa oferta\" }\n                            </div>\n                        </Paper>\n                    </Popper>\n                </div>\n            </li>   \n        </ClickAwayListener>\n    )\n}\n\nexport default DealItem;","import React, { useState, useEffect } from 'react';\n\nimport Container from './components/Container';\nimport DealItem from './components/DealItem';\nimport api from './services/api';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  \n  const [deals, setDeals] = useState([]);\n\n  useEffect(() => {\n    async function loadDeals() {\n      const response = await api.get('/deals');\n\n      setDeals(response.data);\n    }\n\n    loadDeals();\n  }, []);\n\n  return (\n    <Container children={(\n      <main>\n        <ul>\n          { deals ? deals.map(deal => ( <DealItem key={deal._id} deal={deal} />  )) : \"\" }\n        </ul>\n      </main>\n    )} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport DealForm from './components/DealForm';\nimport BuyOptionForm from './components/BuyOptionForm';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <Switch>\n            <Route path=\"/\" exact={true} component={App} />\n            <Route path=\"/deal\" component={DealForm} />\n            <Route path=\"/buy-option\" component={BuyOptionForm} />\n        </Switch>\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}